name: Docker Images CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    name: App Dockerization
    steps:
      - uses: actions/checkout@v2
#      - uses: whoan/docker-build-with-cache-action@v5
#        with:
#          username: "${{ secrets.DOCKER_USERNAME }}"
#          password: "${{ secrets.DOCKER_PASSWORD }}"
#          image_name: "${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_IMAGE_NAME_FE }}"
#          context:  ./front/
#      - uses: whoan/docker-build-with-cache-action@v5
#        with:
#          username: "${{ secrets.DOCKER_USERNAME }}"
#          password: "${{ secrets.DOCKER_PASSWORD }}"
#          image_name: "${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_IMAGE_NAME_BE }}"
#          context:  ./back/
#      - uses: whoan/docker-build-with-cache-action@v5
#        with:
#          username: "${{ secrets.DOCKER_USERNAME }}"
#          password: "${{ secrets.DOCKER_PASSWORD }}"
#          image_name: "${{ secrets.DOCKER_USERNAME }}/${{ secrets.CONTAINER_IMAGE_NAME_CONVERTER }}"
#          context:  ./converter/
#
#      - uses: actions/checkout@v2
#      - name: Docker Registry
#        env:
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin
#
#      - name: Building Docker Image Model
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          CONTAINER_IMAGE_NAME: ${{ secrets.CONTAINER_IMAGE_NAME_MODEL }}
#        run:
#          docker build -t $DOCKER_USERNAME/$CONTAINER_IMAGE_NAME:latest ./model/
#
#      - name: Push Docker Container Model to Registry
#        env:
#          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#          CONTAINER_IMAGE_NAME: ${{ secrets.CONTAINER_IMAGE_NAME_MODEL }}
#        run: docker push $DOCKER_USERNAME/$CONTAINER_IMAGE_NAME:latest
#
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.1.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Pull new docker-images and rerun app
        env:
          HOST_NAME: ${{ secrets.HOST_NAME }}
#          USERNAME: ${{ secrets.USERNAME }}
#          PORT: ${{ secrets.PORT }}
        run: |
          ssh-keyscan $HOST_NAME >> ~/.ssh/known_hosts
#          ssh -p  $PORT $USERNAME@$HOST_NAME cd /ecg && sudo docker-compose stop
      - name: Trying ssh-action
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_NAME }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          key_path: ~/.ssh/id_rsa
          port: ${{ secrets.PORT }}
          script: |
            cd /
            ls -la
            cd /ecg
            docker-compose stop
